/*!
  SerializeJSON jQuery plugin.
  https://github.com/marioizquierdo/jquery.serializeJSON
  version 2.8.1 (Dec, 2016)

  Copyright (c) 2012, 2017 Mario Izquierdo
  Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
  and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
*/
;!function(a){if("function"==typeof define&&define.amd){define(["jquery"],a)}else{if("object"==typeof exports){var b=require("jquery");module.exports=a(b)}else{a(window.jQuery||window.Zepto||window.$)}}}(function(a){a.fn.serializeJSON=function(h){var b,B,A,x,k,z,j,g,e,v,q,m,w;return b=a.serializeJSON,B=this,A=b.setupOpts(h),x=B.serializeArray(),b.readCheckboxUncheckedValues(x,A,B),k={},a.each(x,function(c,d){z=d.name,j=d.value,e=b.extractTypeAndNameWithNoType(z),v=e.nameWithNoType,(q=e.type)||(q=b.attrFromInputWithName(B,z,"data-value-type")),b.validateType(z,q,A),"skip"!==q&&(m=b.splitInputNameIntoKeysArray(v),g=b.parseValue(j,z,q,A),(w=!g&&b.shouldSkipFalsy(B,z,v,q,A))||b.deepSet(k,m,g,A))}),k},a.serializeJSON={defaultOptions:{checkboxUncheckedValue:undefined,parseNumbers:!1,parseBooleans:!1,parseNulls:!1,parseAll:!1,parseWithFunction:null,skipFalsyValuesForTypes:[],skipFalsyValuesForFields:[],customTypes:{},defaultTypes:{string:function(b){return String(b)},number:function(b){return Number(b)},"boolean":function(b){return -1===["false","null","undefined","","0"].indexOf(b)},"null":function(b){return -1===["false","null","undefined","","0"].indexOf(b)?b:null},array:function(b){return JSON.parse(b)},object:function(b){return JSON.parse(b)},auto:function(b){return a.serializeJSON.parseValue(b,null,null,{parseNumbers:!0,parseBooleans:!0,parseNulls:!0})},skip:null},useIntKeysAsArrayIndex:!1},setupOpts:function(h){var g,f,e,b,d,c;c=a.serializeJSON,null==h&&(h={}),e=c.defaultOptions||{},f=["checkboxUncheckedValue","parseNumbers","parseBooleans","parseNulls","parseAll","parseWithFunction","skipFalsyValuesForTypes","skipFalsyValuesForFields","customTypes","defaultTypes","useIntKeysAsArrayIndex"];for(g in h){if(-1===f.indexOf(g)){throw new Error("serializeJSON ERROR: invalid option '"+g+"'. Please use one of "+f.join(", "))}}return b=function(i){return !1!==h[i]&&""!==h[i]&&(h[i]||e[i])},d=b("parseAll"),{checkboxUncheckedValue:b("checkboxUncheckedValue"),parseNumbers:d||b("parseNumbers"),parseBooleans:d||b("parseBooleans"),parseNulls:d||b("parseNulls"),parseWithFunction:b("parseWithFunction"),skipFalsyValuesForTypes:b("skipFalsyValuesForTypes"),skipFalsyValuesForFields:b("skipFalsyValuesForFields"),typeFunctions:a.extend({},b("defaultTypes"),b("customTypes")),useIntKeysAsArrayIndex:b("useIntKeysAsArrayIndex")}},parseValue:function(g,f,e,d){var b,c;return b=a.serializeJSON,c=g,d.typeFunctions&&e&&d.typeFunctions[e]?c=d.typeFunctions[e](g):d.parseNumbers&&b.isNumeric(g)?c=Number(g):!d.parseBooleans||"true"!==g&&"false"!==g?d.parseNulls&&"null"==g&&(c=null):c="true"===g,d.parseWithFunction&&!e&&(c=d.parseWithFunction(c,f)),c},isObject:function(b){return b===Object(b)},isUndefined:function(b){return void 0===b},isValidArrayIndex:function(b){return/^[0-9]+$/.test(String(b))},isNumeric:function(b){return b-parseFloat(b)>=0},optionKeys:function(c){if(Object.keys){return Object.keys(c)}var d,b=[];for(d in c){b.push(d)}return b},readCheckboxUncheckedValues:function(g,f,e){var d,b,c;null==f&&(f={}),a.serializeJSON,d="input[type=checkbox][name]:not(:checked):not([disabled])",e.find(d).add(e.filter(d)).each(function(i,h){if(b=a(h),null==(c=b.attr("data-unchecked-value"))&&(c=f.checkboxUncheckedValue),null!=c){if(h.name&&-1!==h.name.indexOf("[][")){throw new Error("serializeJSON ERROR: checkbox unchecked values are not supported on nested arrays of objects like '"+h.name+"'. See https://github.com/marioizquierdo/jquery.serializeJSON/issues/67")}g.push({name:h.name,value:c})}})},extractTypeAndNameWithNoType:function(b){var c;return(c=b.match(/(.*):([^:]+)$/))?{nameWithNoType:c[1],type:c[2]}:{nameWithNoType:b,type:null}},shouldSkipFalsy:function(j,h,g,f,c){var e=a.serializeJSON.attrFromInputWithName(j,h,"data-skip-falsy");if(null!=e){return"false"!==e}var d=c.skipFalsyValuesForFields;if(d&&(-1!==d.indexOf(g)||-1!==d.indexOf(h))){return !0}var b=c.skipFalsyValuesForTypes;return null==f&&(f="string"),!(!b||-1===b.indexOf(f))},attrFromInputWithName:function(f,g,d){var c,b;return c=g.replace(/(:|\.|\[|\]|\s)/g,"\\$1"),b='[name="'+c+'"]',f.find(b).add(f.filter(b)).attr(d)},validateType:function(f,e,d){var c,b;if(b=a.serializeJSON,c=b.optionKeys(d?d.typeFunctions:b.defaultOptions.defaultTypes),e&&-1===c.indexOf(e)){throw new Error("serializeJSON ERROR: Invalid type "+e+" found in input name '"+f+"', please use one of "+c.join(", "))}return !0},splitInputNameIntoKeysArray:function(c){var b;return a.serializeJSON,b=c.split("["),""===(b=a.map(b,function(d){return d.replace(/\]/g,"")}))[0]&&b.shift(),b},deepSet:function(e,b,m,k){var h,g,j,f,d,c;if(null==k&&(k={}),(c=a.serializeJSON).isUndefined(e)){throw new Error("ArgumentError: param 'o' expected to be an object or array, found undefined")}if(!b||0===b.length){throw new Error("ArgumentError: param 'keys' expected to be an array with least one element")}h=b[0],1===b.length?""===h?e.push(m):e[h]=m:(g=b[1],""===h&&(d=e[f=e.length-1],h=c.isObject(d)&&(c.isUndefined(d[g])||b.length>2)?f:f+1),""===g?!c.isUndefined(e[h])&&a.isArray(e[h])||(e[h]=[]):k.useIntKeysAsArrayIndex&&c.isValidArrayIndex(g)?!c.isUndefined(e[h])&&a.isArray(e[h])||(e[h]=[]):!c.isUndefined(e[h])&&c.isObject(e[h])||(e[h]={}),j=b.slice(1),c.deepSet(e[h],j,m,k))}}});